diff -Nru ../orig/qemu-7.2.0/include/ui/egl-helpers.h ./include/ui/egl-helpers.h
--- ../orig/qemu-7.2.0/include/ui/egl-helpers.h	2022-12-14 08:28:45.000000000 -0800
+++ ./include/ui/egl-helpers.h	2022-12-15 18:43:11.087459300 -0800
@@ -2,7 +2,15 @@
 #define EGL_HELPERS_H

 #include <epoxy/gl.h>
+#ifdef CONFIG_EGL
 #include <epoxy/egl.h>
+#else
+typedef int EGLConfig;
+typedef int EGLContext;
+typedef int EGLDisplay;
+typedef int EGLNativeWindowType;
+typedef int EGLSurface;
+#endif
 #ifdef CONFIG_GBM
 #include <gbm.h>
 #endif
diff -Nru ../orig/qemu-7.2.0/meson.build ./meson.build
--- ../orig/qemu-7.2.0/meson.build	2022-12-15 18:39:56.193799300 -0800
+++ ./meson.build	2022-12-15 18:43:11.099877200 -0800
@@ -1141,12 +1141,14 @@
                          required: get_option('coreaudio'))
 endif

+egl = not_found
 opengl = not_found
 if not get_option('opengl').auto() or have_system or have_vhost_user_gpu
   epoxy = dependency('epoxy', method: 'pkg-config',
                       required: get_option('opengl'), kwargs: static_kwargs)
+  opengl = epoxy
   if cc.has_header('epoxy/egl.h', dependencies: epoxy)
-    opengl = epoxy
+    egl = epoxy
   elif get_option('opengl').enabled()
     error('epoxy/egl.h not found')
   endif
@@ -1833,6 +1835,7 @@
 config_host_data.set('CONFIG_BLKIO', blkio.found())
 config_host_data.set('CONFIG_CURL', curl.found())
 config_host_data.set('CONFIG_CURSES', curses.found())
+config_host_data.set('CONFIG_EGL', egl.found())
 config_host_data.set('CONFIG_GBM', gbm.found())
 config_host_data.set('CONFIG_GIO', gio.found())
 config_host_data.set('CONFIG_GLUSTERFS', glusterfs.found())
@@ -3961,6 +3964,7 @@
 summary_info += {'libusb':            libusb}
 summary_info += {'usb net redir':     usbredir}
 summary_info += {'OpenGL support (epoxy)': opengl}
+summary_info += {'EGL':               egl}
 summary_info += {'GBM':               gbm}
 summary_info += {'libiscsi support':  libiscsi}
 summary_info += {'libnfs support':    libnfs}
diff -Nru ../orig/qemu-7.2.0/ui/egl-helpers.c ./ui/egl-helpers.c
--- ../orig/qemu-7.2.0/ui/egl-helpers.c	2022-12-14 08:28:45.000000000 -0800
+++ ./ui/egl-helpers.c	2022-12-15 18:43:11.103387100 -0800
@@ -334,6 +334,8 @@

 /* ---------------------------------------------------------------------- */

+#ifdef CONFIG_EGL
+
 EGLSurface qemu_egl_init_surface_x11(EGLContext ectx, EGLNativeWindowType win)
 {
     EGLSurface esurface;
@@ -527,3 +529,5 @@

     return ectx;
 }
+
+#endif //#ifdef CONFIG_EGL
diff -Nru ../orig/qemu-7.2.0/ui/meson.build ./ui/meson.build
--- ../orig/qemu-7.2.0/ui/meson.build	2022-12-14 08:28:45.000000000 -0800
+++ ./ui/meson.build	2022-12-15 18:43:11.119058300 -0800
@@ -59,13 +59,15 @@
   opengl_ss = ss.source_set()
   opengl_ss.add(gbm)
   opengl_ss.add(when: [opengl, pixman],
-               if_true: files('shader.c', 'console-gl.c', 'egl-helpers.c', 'egl-context.c'))
+               if_true: files('shader.c', 'console-gl.c', 'egl-helpers.c'))
+  opengl_ss.add(when: [opengl, pixman, egl],
+               if_true: files('egl-context.c'))
   ui_modules += {'opengl' : opengl_ss}
 endif
 
 if opengl.found() and gbm.found()
   egl_headless_ss = ss.source_set()
-  egl_headless_ss.add(when: [opengl, gbm, pixman],
+  egl_headless_ss.add(when: [opengl, gbm, pixman, egl],
                       if_true: files('egl-headless.c'))
   ui_modules += {'egl-headless' : egl_headless_ss}
 endif
@@ -102,8 +104,8 @@
     gtk_ss.add(files('gtk-clipboard.c'))
   endif
   gtk_ss.add(when: x11, if_true: files('x_keymap.c'))
-  gtk_ss.add(when: opengl, if_true: files('gtk-gl-area.c'))
-  gtk_ss.add(when: [x11, opengl], if_true: files('gtk-egl.c'))
+  gtk_ss.add(when: [opengl, egl], if_true: files('gtk-gl-area.c'))
+  gtk_ss.add(when: [x11, opengl, egl], if_true: files('gtk-egl.c'))
   ui_modules += {'gtk' : gtk_ss}
 endif
 
diff -Nru ../orig/qemu-7.2.0/ui/sdl2-gl.c ./ui/sdl2-gl.c
--- ../orig/qemu-7.2.0/ui/sdl2-gl.c	2022-12-14 08:28:45.000000000 -0800
+++ ./ui/sdl2-gl.c	2022-12-15 18:43:11.119058300 -0800
@@ -169,6 +169,13 @@

 void sdl2_gl_destroy_context(DisplayGLCtx *dgc, QEMUGLContext ctx)
 {
+#ifdef CONFIG_DARWIN
+    /* Apple OpenGL FBO blit quirk
+     * Require SDL2 fix in https://github.com/libsdl-org/SDL/issues/4986
+     */
+    struct sdl2_console *scon = container_of(dgc, struct sdl2_console, dgc);
+    SDL_SetWindowPosition(scon->real_window, SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED);
+#endif
     SDL_GLContext sdlctx = (SDL_GLContext)ctx;
 
     SDL_GL_DeleteContext(sdlctx);
diff -Nru ../orig/qemu-7.2.0/ui/sdl2.c ./ui/sdl2.c
--- ../orig/qemu-7.2.0/ui/sdl2.c	2022-12-15 18:43:57.071806600 -0800
+++ ./ui/sdl2.c	2022-12-15 18:43:11.119058300 -0800
@@ -92,6 +92,16 @@
     }
 #ifdef CONFIG_OPENGL
     if (scon->opengl) {
+#if defined(CONFIG_WIN32) || defined(CONFIG_DARWIN)
+        /* On Windows 10 & macOS, SDL2 window with SDL_WINDOW_OPENGL does not
+         * default to OpenGL backend.
+         */
+        SDL_SetHint(SDL_HINT_RENDER_DRIVER, "opengl");
+#ifdef CONFIG_DARWIN
+        /* Apple OpenGL quirk */
+        SDL_GL_SetAttribute(SDL_GL_CONTEXT_PROFILE_MASK, SDL_GL_CONTEXT_PROFILE_CORE);
+#endif
+#endif
         flags |= SDL_WINDOW_OPENGL;
     }
 #endif
